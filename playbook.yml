---

- hosts: all
  become: yes
  become_method: sudo

  vars:
   - splunk_x86_64_binpath: "{{ lookup('pipe', 'ls /opt/deployment/splunk_bin/splunkforwarder*x86_64.tgz | head -1') }}"
   - splunk_i686_binpath: "{{ lookup('pipe', 'ls /opt/deployment/splunk_bin/splunkforwarder*i686.tgz | head -1') }}"
   - splunk_installpath: /opt
   - splunk_deploymentserver_adress: 172.28.128.250:8089
   - localzone: Europe/Paris

  tasks:

############################## Set Timezone ##############################

# Configure time zone
  - name: Set timezone variables for Debian / Ubuntu
    copy: content='{{ localzone }}'
          dest=/etc/timezone
          owner=root
          group=root
          mode=0644
          backup=yes
    notify:
      - update timezone
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

  - block:

    - name: Set timezone for CentOS / RHEL / Fedora
      file: src=/usr/share/zoneinfo/{{ localzone }}  dest=/etc/localtime state=link force=yes

    when: ansible_distribution != 'Debian' or ansible_distribution != 'Ubuntu'

############################## Fedora yum error fix ##############################

  - block:

    - name: Install yum for Fedora
      command: dnf install yum -y -q

    when: (ansible_distribution == "Fedora" and ansible_distribution_major_version == "23")

############################## Perl dependency ##############################

  - block:

    - name: Install perl minimal for CentOS 6.x / Oracle Linux 6.x
      yum: name=perl state=latest update_cache=yes

    when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "6") or (ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "6") or (ansible_distribution == "Fedora")

############################## Perl Time/HiRes dependency ##############################

  - block:

    - name: Install perl-Time-HiRes for CentOS 6.x / OracleLinux 6.x
      yum: name=perl-Time-HiRes state=latest

    when: (ansible_distribution == "CentOS" or ansible_distribution == "OracleLinux") and (ansible_distribution_major_version == "6")

############################## nmon dev dependencies for Oracle Linux ##############################

  - block:

    - name: Oracle Linux - gcc dev dependencies for nmon compilation
      yum: name=gcc* state=latest

    when: (ansible_distribution == "OracleLinux" or ansible_distribution == "CentOS")

  - block:

    - name: Oracle Linux - ncurses dev dependencies for nmon compilation
      yum: name=ncurses-dev* state=latest

    when: (ansible_distribution == "OracleLinux" or ansible_distribution == "CentOS")

  - block:

    - name: Oracle Linux - make dev dependencies for nmon compilation
      yum: name=make state=latest

    when: (ansible_distribution == "OracleLinux" or ansible_distribution == "CentOS")

############################## Deploy and Configuration Splunk UF ##############################

  # Verify if Splunk Universal Forwarder is already installed
  - name: Check if Splunk Universal Forwarder path exists
    stat: path={{ splunk_installpath }}/splunkforwarder
    register: check_splunk_path

  # Copy and unarchive Splunk Universal Forwarder if not present
  - name: Copy and unarchive Splunk Universal Forwarder for 64 bits architecture
    unarchive: src={{ splunk_x86_64_binpath }} dest={{ splunk_installpath }}
    when: (ansible_architecture == "x86_64" and check_splunk_path.stat.exists == false)

  # Copy and unarchive Splunk Universal Forwarder if not present
  - name: Copy and unarchive Splunk Universal Forwarder for 32 bits architecture
    unarchive: src={{ splunk_i686_binpath }} dest={{ splunk_installpath }}
    when: (ansible_architecture != "x86_64" and check_splunk_path.stat.exists == false)

  # Start and accept licence
  - name: Start Splunk Universal Forwarder and accept licence
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk start --answer-yes --no-prompt --accept-license"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Enable boot-start
  - name: Enable boot start for Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk enable boot-start"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Configure Splunk as a client of the deployment server
  - name: Configure Splunk as client of the deployment server
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk set deploy-poll {{ splunk_deploymentserver_adress }} -auth admin:changeme"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

  # Finally restart Splunk
  - name: Restart Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk restart"
    when: check_splunk_path.stat.exists == false
    ignore_errors: yes

############################## nmon compilation ##############################

  - name: Copy nmon source code
    copy: src=/opt/nmon-binaries/lmon.c dest=/home/vagrant owner=vagrant group=vagrant

  - name: Copy makefile
    copy: src=/opt/nmon-binaries/makefile dest=/home/vagrant owner=vagrant group=vagrant

############################## Oracle Linux ##############################

  - command: "make nmon_x86_64_ol72"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('7.2'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_ol71"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('7.1'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_ol70"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('7.0'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_ol67"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.7'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_ol66"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.6'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_ol65"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.5'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_ol64"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.4'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_ol67"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.7'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_ol66"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.6'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_ol65"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.5'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_ol64"
    when: (ansible_distribution == "OracleLinux" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.4'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

############################## nmon compilation ##############################

  - command: "make nmon_x86_64_centos72"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('7.2'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_centos71"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('7.1'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_centos70"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('7.0'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_centos67"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.7'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_centos66"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.6'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_centos65"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.5'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_64_centos64"
    when: (ansible_distribution == "CentOS" and ansible_architecture == "x86_64" and ansible_distribution_version.startswith('6.4'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_centos67"
    when: (ansible_distribution == "CentOS" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.7'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_centos66"
    when: (ansible_distribution == "CentOS" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.6'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_centos65"
    when: (ansible_distribution == "CentOS" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.5'))
    become: yes
    become_user: vagrant
    ignore_errors: yes

  - command: "make nmon_x86_centos64"
    when: (ansible_distribution == "CentOS" and ansible_architecture != "x86_64" and ansible_distribution_version.startswith('6.4'))
    become: yes
    become_user: vagrant
    ignore_errors: yes


  # Copy compiled binary
  - shell: "cp /home/vagrant/nmon* /opt/nmon-binaries/"
    become: yes
    become_user: vagrant
    ignore_errors: yes

  handlers:

    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata
